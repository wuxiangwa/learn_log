var o = {
  a: {
    b:2
  }
};
// 两个对象被创建，一个作为另一个的属性被引用，另一个被分配给变量o
// 很显然，没有一个可以被垃圾收集


var o2 = o; // o2变量是第二个对“这个对象”的引用

console.log(o2);

o = 1;      // 现在，“这个对象”的原始引用o被o2替换了
console.log(o2);
var oa = o2.a; // 引用“这个对象”的a属性
// 现在，“这个对象”有两个引用了，一个是o2，一个是oa
console.log(oa);

o2 = "yo"; // 最初的对象现在已经是零引用了
           // 他可以被垃圾回收了
           // 然而它的属性a的对象还在被oa引用，所以还不能回收
console.log(o2);
oa = null; // a属性的那个对象现在也是零引用了
           // 它可以被垃圾回收了
console.log(oa);
// console.log(o);
